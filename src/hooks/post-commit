#!/bin/bash
# Check Python availability
if command -v python3 > /dev/null 2>&1; then
   python_cmd="python3"
elif command -v python > /dev/null 2>&1; then
   python_cmd="python"
else
   echo "WARNING: Python3 is not installed. Commit review functionality will not work."
   exit 1
fi

# Get the directory where this script is located
SCRIPT_DIR="$(git config --global --get core.hookspath)"
COMMIT_SCRIPTS_DIR="$SCRIPT_DIR/commit-scripts"
REPORTS_DIR="$SCRIPT_DIR/.commit-reports"
METADATA_FILE="$SCRIPT_DIR/.commit_metadata.json"

echo "Post Metadata file: $METADATA_FILE"

# Create reports directory if it doesn't exist
mkdir -p "$REPORTS_DIR"

if [ ! -f "$METADATA_FILE" ]; then
    echo "No commit metadata found."
    exit 0
fi

# Ensure Python can find the commit-scripts module
export PYTHONPATH="$COMMIT_SCRIPTS_DIR:$PYTHONPATH"

# Run the Python script
$python_cmd <<EOF
import json
import os
import sys

# Set up paths
commit_scripts_dir = os.environ.get("COMMIT_SCRIPTS_DIR", "$COMMIT_SCRIPTS_DIR")
metadata_file = "$METADATA_FILE"
reports_dir = "$REPORTS_DIR"

sys.path.insert(0, commit_scripts_dir)

from secretscan import generate_html_report  # Importing correctly

try:
    with open(metadata_file, "r") as f:
        metadata = json.load(f)  # Correct way to load JSON from a file
except FileNotFoundError:
    print(f"Error: Metadata file '{metadata_file}' not found.")
    sys.exit(1)
except json.JSONDecodeError as e:
    print(f"Error parsing JSON file '{metadata_file}': {e}")
    sys.exit(1)  # Exit if JSON is invalid

output_path = os.path.join(reports_dir, "commit-scan-report.html")
generate_html_report(output_path, metadata=metadata)
EOF

# ðŸ”¥ Cleanup: Remove metadata file after use
rm -f "$METADATA_FILE"
echo "Metadata file removed: $METADATA_FILE"
